#!/usr/bin/env python

from smsgate import SMSGate, SMSSendError
from optparse import OptionParser
from logging import handlers
from platform import node
import ConfigParser
import logging
import sys

# Command line arguments handling
usage = "Usage: %prog [options] <phone number> <message>"
parser = OptionParser(usage=usage, epilog="<phone number> should be in a "
                      "7xxxxxxxxxx format")
parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
                  default=False, help="verbose output")
parser.add_option("-c", "--config", dest="config",
                  default="/etc/wiw-smsgate.conf",
                  help="configuration file location "
                       "(default: /etc/wiw-smsgate.conf)")
parser.add_option("-t", "--telegram", action="store_true", dest="telegram",
                  default=False, help="send via Telegram")
(options, args) = parser.parse_args()

if len(args) == 0:
    sys.exit("No arguments specified. See --help.")

# Configuration file handling
config = ConfigParser.ConfigParser()
if not options.config:
    config.readfp(open("/etc/wiw-smsgate.conf"))
else:
    config.readfp(open(options.config))


# Logging
logger = logging.getLogger("wiw-smsgate")
sh = logging.StreamHandler()
if options.verbose:
    sh.setLevel(logging.DEBUG)
else:
    sh.setLevel(logging.INFO)
formatter = logging.Formatter("%(levelname)s %(message)s", "%b %e")
sh.setFormatter(formatter)
logger.addHandler(sh)
logger.setLevel(logging.DEBUG)
logger.propagate = False
fh = handlers.RotatingFileHandler(config.get("sms", "logfile"))
fh.setLevel(logging.DEBUG)
formatter = logging.Formatter("%(asctime)s %(name)s: %(levelname)s "
                              "%(message)s", "%b %e %H:%M:%S")
fh.setFormatter(formatter)
logger.addHandler(fh)

gate = config.get("sms", "gate")
sms = SMSGate(gate)


def main():
    if options.verbose:
        logger.debug("Command line: %s %s" % (options, args))
    hostname = node().split(".")[0]
    phone = args[0]
    message = " ".join(args[1:]) + " [%s]" % hostname
    try:
        if options.telegram:
            sms.send(phone, message, options.telegram)
        else:
            sms.send(phone, message)
    except SMSSendError:
        logger.error("Error while sending message \"%s\" to %s" %
                     (message, phone))

        sys.exit(1)
    logger.info("Message \"%s\" was sent to %s" % (message, phone))

if __name__ == '__main__':
    main()
